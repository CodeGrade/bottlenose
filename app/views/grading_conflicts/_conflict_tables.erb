<table class="table" id="conflicts-by-staff">
  <thead>
    <th>Staff</th>
    <th>Student</th>
  </thead>
  <tbody>
    <% conflicts_by_staff = @grading_conflicts.group_by{ |gc| gc.staff } %>
    <% conflicts_by_staff.each do |conflicted_staff, student_conflicts| %>
      <tr>
        <td><%= conflicted_staff.display_name %></td>
        <td>
          <% first_conflict = true %>
          <% student_conflicts.sort_by { |c| c.student.display_name }.each do |cf| %>
              <% if cf.active? 
                    link_class = "text-success"
                  elsif cf.inactive?
                    link_class = "text-muted"
                  elsif cf.pending?
                    link_class = "text-warning"
                  else
                    link_class = "text-danger"
                  end
              %>
            <span class="status-tooltip">
              <span><%= cf.status.humanize %> as of <span class="local-time"><%= cf.updated_at.iso8601 %></span></span>
              <%= link_to cf.student.display_name, course_grading_conflict_path(@course, cf), 
              class: "#{link_class}", style: (first_conflict ? "padding-right: 5px;": "padding: 0px 5px;") %>
            </span>
            <% first_conflict = false %>
          <% end %>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<table class="table" id="conflicts-by-student">
  <thead>
    <th>Student</th>
    <th>Staff</th>
  </thead>
  <tbody>
    <% conflicts_by_student = @grading_conflicts.group_by { |gc| gc.student } %>
    <% conflicts_by_student.each do |conflicted_student, staff_conflicts| %>
      <tr>
        <td><%= conflicted_student.display_name %></td>
        <td>
          <% first_conflict = true %>
          <% staff_conflicts.sort_by {|c| c.staff.display_name }.each do |cf| %>
            <%
              if cf.active?
                link_class = "text-success"
              elsif cf.inactive?
                link_class = "text-muted"
              elsif cf.pending?
                link_class = "text-warning"
              else
                link_class = "text-danger"
              end
            %>
            <span class="status-tooltip">
              <span><%= cf.status.humanize %> as of <span class="local-time"><%= cf.updated_at.iso8601 %></span></span>
              <%= link_to cf.staff.display_name, course_grading_conflict_path(@course, cf), 
              class: "#{link_class}", style: (first_conflict ? "padding-right: 5px;": "padding: 0px 5px;") %>
            </span>
            <% first_conflict = false %>
          <% end %>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>

<script type="text/javascript">
  $(function () {
    $("#conflicts-by-staff").hide();
    $("#toggle-conflicts-view").on("click", function(e) {
      $("#conflicts-by-student").toggle();
      $("#conflicts-by-staff").toggle();
    });

    $.tablesorter.themes.bootstrap = {
        caption      : 'caption',
        sortNone     : '',
        sortAsc      : '',
        sortDesc     : '',
        active       : '', // applied when column is sorted
        hover        : '', // custom css required - a defined bootstrap style may not override other classes
        // icon class names
        icons        : '', // add "icon-white" to make them white; this icon class is added to the <i> in the header
        iconSortAsc  : 'glyphicon glyphicon-chevron-up', // class name added to icon when column has ascending sort
        iconSortDesc : 'glyphicon glyphicon-chevron-down', // class name added to icon when column has descending sort
        filterRow    : '', // filter row class; use widgetOptions.filter_cssFilter for the input/select element
        footerRow    : '',
        footerCells  : '',
        even         : '', // even row zebra striping
        odd          : ''  // odd row zebra striping
      };
      $("#conflicts-by-student").tablesorter({
        headerTemplate: "{content} {icon}",
        theme: "bootstrap",
        widgets: ['uitheme'],
        sortList: [[0, 0]],
        headers: {
          1: { sorter: false }
        }
      });
      $("#conflicts-by-staff").tablesorter({
        headerTemplate: "{content} {icon}",
        theme: "bootstrap",
        widgets: ['uitheme'],
        sortList: [[0, 0]],
        headers: {
          1: { sorter: false }
        }
      });
  });
</script>