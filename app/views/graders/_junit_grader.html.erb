<%= f.hidden_field :type, value: "JunitGrader" %>
<%= f.hidden_field :order %>

<table class="table no-first-row" style="margin-bottom: 0px;">
  <tr class="form-group">
    <td class="col-sm-2"><%= f.label "avail_score", "Points available:" %></td>
    <td class="col-sm-4"><%= f.spinner "avail_score", f.object.avail_score || 50, min: 0, delta: 5 %></td>
    <td><%= f.check_box :extra_credit, data: {toggle: "toggle", on: "Extra credit", off: "Regular"} %></td>
  </tr>
  <%= render "graders/grader_file_picker", f: f, id: f.object.id.to_s,
      label: "Reference tests:", schema: "junit-schema" %>
  <tr class="form-group">
    <td class="col-sm-2"><%= f.label "test_class", "Test class(es):" %></td>
    <td class="col-sm-4"><%= f.text_field "test_class" %></td>
    <td style="position: relative;">
      <span class="btn btn-info btn-sm" data-toggle="collapse"
            data-target="#cmdline_info_<%= f.object.id %>"><i class="glyphicon glyphicon-question-sign"></i></span>
      <p id="cmdline_info_<%= f.object.id %>" class="collapse alert alert-info" style="position: absolute;">
        You may specify the names of multiple test classes, separated
        by spaces.  Additionally, you may use <code>-weight ##</code>
        to scale all the test weights for subsequent classes by a
        given factor (you may use this flag multiple times).  The
        default class weight is 1.0.
      </p>
    </td>
  </tr>
  <tr class="form-group">
    <td class="col-sm-2">
      <%= f.label "test_timeout", "Maximum timeout per test:",
          title: "What should the maximum timeout for each @Test be? Individual test methods can apply a shorter timeout if desired." %>
    </td>
    <% timeout = begin
       f.object.test_timeout || Grader::DEFAULT_TEST_TIMEOUT
       rescue Exception
       Grader::DEFAULT_TEST_TIMEOUT
       end %>
    <td class="col-sm-4"><%= f.spinner "test_timeout", timeout, min: 1, max: 60, delta: 1 %></td>
    <td></td>
  </tr>
  <tr class="form-group">
    <td class="col-sm-2"><%= f.label "errors_to_show", "Number of errors to show:" %></td>
    <% errs = begin
       f.object.errors_to_show || Grader::DEFAULT_ERRORS_TO_SHOW
       rescue Exception
       Grader::DEFAULT_ERRORS_TO_SHOW
       end %>
    <td class="col-sm-4"><%= f.spinner "errors_to_show", errs, min: 0, delta: 1 %></td>
    <td></td>
  </tr>
  <%# TODO: Only render if admin %>
  <tr class="form-group">
    <td class="col-sm-4"><%= f.label "orca_status", "Use Orca? (Experimental: do not use yet!)" %></td>
    <td><%= f.check_box :orca_status, checked: f.object.orca_status,
      data: {toggle: "toggle", on: "Yes", off: "No"} %></td>
    <td></td>
  </tr>
  <%# TODO: connect to the Orca "source of truth" for if the image exists.%>
  <% if f.object.orca_status  %>
    <% if f.object.has_orca_build_result? %>
      <% build_status = f.object.orca_build_result['was_successful'] ? 'Completed' : 'Failed' %>
    <% else %>
      <% build_status = "Pending" %>
    <% end %>
    <tr>
      <td><strong>Orca Grader Build</strong></td>
      <td>
      <% if build_status == "Completed" %>
        <span class="text-success">Completed</span>
      <% elsif build_status == "Failed" %>
        <span class="text-danger">Failed</span>
      <% else %>
        <span class="text-warning">Pending</span>
      <% end %>
      <br />
      <span id="orca-server-image-status">Placeholder</span>
      </td>
      <% if f.object.has_orca_build_result? %>
        <td><%= link_to "Build Logs", build_log_course_assignment_grader_path(@course, @assignment, f.object) %></td>
      <% end %>
      <td></td>
    </tr>
  <% end %>
</table>
